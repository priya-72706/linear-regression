
# 1. Import libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

# 2. Load dataset
data = pd.read_csv('C:\\Users\\SNU\\Downloads\\Housing.csv')

# 3. Choose feature and target
# Choose one feature (Example: 'area' or 'bedrooms') — update 'feature_column_name' accordingly
feature_column = 'area'  # Change this based on what you see in data.columns
X = data[[feature_column]]
y = data['price']

# 4. Split into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 5. Fit Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# 6. Predict
y_pred = model.predict(X_test)

# 7. Evaluate
mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Absolute Error (MAE): {mae:.2f}")
print(f"Mean Squared Error (MSE): {mse:.2f}")
print(f"R-squared (R²): {r2:.2f}")
print(f"Intercept: {model.intercept_:.2f}")
print(f"Coefficient for {feature_column}: {model.coef_[0]:.2f}")


# 8. Plot
plt.figure(figsize=(8,6))
plt.scatter(X_test, y_test, color='blue', label='Actual')
plt.plot(X_test, y_pred, color='red', linewidth=2, label='Predicted Line')
plt.xlabel(feature_column.capitalize())
plt.ylabel('Price')
plt.title(f'Linear Regression: {feature_column.capitalize()} vs Price')
plt.legend()
plt.show()

